version: 2.1
jobs:
  build_and_push:
    docker:
      - image: cimg/node:14.19.0
    steps:
      - checkout 
      - setup_remote_docker 

      # Update npm
      - run:
          name: Update npm
          command: npm install -g npm@10.8.1 || exit 1

      # Install Dependencies for Each Service (using --legacy-peer-deps)
      - run:
          name: Install Dependencies (udagram-api-feed)
          working_directory: ./udagram-api-feed
          command: npm ci --legacy-peer-deps || exit 1

      - run:
          name: Install Dependencies (udagram-api-user)
          working_directory: ./udagram-api-user
          command: npm ci --legacy-peer-deps || exit 1
      
      - run:
          name: Install Dependencies (udagram-frontend)
          working_directory: ./udagram-frontend
          command: npm install -f || exit 1

      - run: 
          name: Install Dependencies (udagram-reverseproxy)
          working_directory: ./udagram-reverseproxy
          command: npm ci --legacy-peer-deps || exit 1

      # Front-End Build (Important!)
      - run:
          name: Build Frontend
          working_directory: ./udagram-frontend 
          command: |
            source set_env.sh || exit 1 
            ionic build --prod || exit 1 

      - run: 
          name: Build Images
          command: |
            docker build -t udagram-api-feed ./udagram-api-feed || exit 1
            docker build -t udagram-api-user ./udagram-api-user || exit 1
            docker build -t udagram-frontend ./udagram-frontend/www || exit 1  
            docker build -t udagram-reverseproxy ./udagram-reverseproxy || exit 1

      - run:
          name: Tag Images
          command: |
            docker tag udagram-api-feed sonic3k/udagram-api-feed:v1 || exit 1
            docker tag udagram-api-user sonic3k/udagram-api-user:v1 || exit 1
            docker tag udagram-frontend sonic3k/udagram-frontend:v1 || exit 1
            docker tag udagram-reverseproxy sonic3k/udagram-reverseproxy:v1 || exit 1

      - run:
          name: Docker Login
          command: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - run:
          name: Push Images
          command: |
            docker push sonic3k/udagram-api-feed:v1 || exit 1
            docker push sonic3k/udagram-api-user:v1 || exit 1
            docker push sonic3k/udagram-frontend:v1 || exit 1
            docker push sonic3k/udagram-reverseproxy:v1 || exit 1 

workflows:
  build_and_push_workflow:
    jobs:
      - build_and_push:
          filters:
            branches:
              only: main 
